// $Id$
// vim:ft=javascript

ARG_ENABLE("yac", "enable yac support", "no");

if (PHP_YAC != "no") {
	if( CHECK_HEADER_ADD_INCLUDE("fastlz.h", "CFLAGS_YAC", PHP_YAC + ";" + configure_module_dirname + "\\compressor\\fastlz") &&
		CHECK_HEADER_ADD_INCLUDE("yac_serializer.h", "CFLAGS_YAC", PHP_YAC + ";" + configure_module_dirname + "\\serializer") &&
		CHECK_HEADER_ADD_INCLUDE("yac_storage.h", "CFLAGS_YAC", PHP_YAC + ";" + configure_module_dirname + "\\storage") &&
		CHECK_HEADER_ADD_INCLUDE("yac_allocator.h", "CFLAGS_YAC", PHP_YAC + ";" + configure_module_dirname + "\\storage\\allocator")) {

	EXTENSION("yac", "yac.c"); 

	ADD_SOURCES(configure_module_dirname + "\\compressor\\fastlz", "fastlz.c", "yac");
	ADD_SOURCES(configure_module_dirname + "\\serializer", "php.c", "yac");
	ADD_SOURCES(configure_module_dirname + "\\storage", "yac_storage.c", "yac");
	ADD_SOURCES(configure_module_dirname + "\\storage\\allocator", "yac_allocator.c", "yac");
	ADD_SOURCES(configure_module_dirname + "\\storage\\allocator\\allocators", "<WINDOWS ALLOCATOR HERE>", "yac");

	AC_DEFINE('HAVE_YAC', 1, 'Have yac library');

	ADD_FLAG("CFLAGS_YAC", ' /D <WINDOWS ALLOCATOR HERE> /I "' + configure_module_dirname + '" ');
	
	} else {
		WARNING("yac not enabled, headers not found");
	}
}

